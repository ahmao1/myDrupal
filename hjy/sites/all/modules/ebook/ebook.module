<?php

/**
 * Implementation of hook_node_info
 *
 * @return unknown
 */
function ebook_node_info() {
	$info = array();
	$info['ebook'] = array(
		'name' => t('EBook'),
		'base' => 'node_content',
	);
	return $info;
}


/**
 * Implementation of hook_menu()
 */
function ebook_menu() {
  $items['allEbooks'] = array(
    'title' => t('All EBooks'),
    'page callback' => 'allEbooks_callback',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'main-menu',
    'weight' => 5,
  );

  return $items;
}

/**
 * Page callback: displaying a page with php template
 *
 * @see createAPageWithTemplate_menu()
 */
function allEbooks_callback(){
  global $user;
  $build = array();
  $uid = $user->uid;
  $query = db_select('node', 'n');
  $nids = $query
    ->fields('n', array('nid', 'created'))
    ->condition('type', 'ebook')
    ->condition('status',1)
    ->condition('uid',$uid,'=')
    ->orderBy('created', 'DESC')
    ->addTag('node_access')
    ->execute()
    ->fetchCol();
  if (!empty($nids)) {
    $nodes = node_load_multiple($nids);
    $build += node_view_multiple($nodes);
    $build['pager'] = array(
      '#theme' => 'pager',
      '#weight' => 5,
    );
  }
  else {
    drupal_set_message(t('No ebooks.'));
  }
  return $build;
/*
  if (count($uids)!=0) {
    $html = '<ul>';
    foreach($uids as $item) {
        $html .= '<li><a href="' . url("user/{$item->uid}")  . '"  class="username">' . $item->name . '</a></li>';
    }
    $html .= '</ul>';

    return $html;

    $build['content'] =  $html;
*/
  }